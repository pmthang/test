{"ast":null,"code":"var _jsxFileName = \"/home/thang/todo-redux/src/components/TodoForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCurrent, saveTodo } from '../reducers/todo';\nimport store from '../store';\n\nclass TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInputChange = evt => {\n      const val = evt.target.value;\n      this.props.updateCurrent(val);\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      this.props.saveTodo(this.props.currentTodo);\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputChange,\n      value: this.props.currentTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n} // const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\n\n\nexport default connect(state => ({\n  currentTodo: state.currentTodo\n}), {\n  updateCurrent,\n  saveTodo\n})(TodoForm);","map":{"version":3,"sources":["/home/thang/todo-redux/src/components/TodoForm.js"],"names":["React","Component","connect","updateCurrent","saveTodo","store","TodoForm","handleInputChange","evt","val","target","value","props","handleSubmit","preventDefault","currentTodo","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BM,iBAD+B,GACVC,GAAD,IAAS;AAC3B,YAAMC,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAvB;AACA,WAAKC,KAAL,CAAWT,aAAX,CAAyBM,GAAzB;AACD,KAJ8B;;AAAA,SAK/BI,YAL+B,GAKhBL,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACM,cAAJ;AACA,WAAKF,KAAL,CAAWR,QAAX,CAAoB,KAAKQ,KAAL,CAAWG,WAA/B;AACD,KAR8B;AAAA;;AAS/BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAClC,MAAA,QAAQ,EAAE,KAAKN,iBADmB;AAElC,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWG,WAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CADF;AAOD;;AAjB8B,C,CAmBjC;AACA;;;AACA,eAAeb,OAAO,CACnBe,KAAD,KAAY;AAAEF,EAAAA,WAAW,EAAEE,KAAK,CAACF;AAArB,CAAZ,CADoB,EAEpB;AAAEZ,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAFoB,CAAP,CAGbE,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { updateCurrent, saveTodo } from '../reducers/todo'\nimport store from '../store'\n\nclass TodoForm extends Component {\n  handleInputChange = (evt) => {\n    const val = evt.target.value\n    this.props.updateCurrent(val)\n  }\n  handleSubmit = evt => {\n    evt.preventDefault()\n    this.props.saveTodo(this.props.currentTodo)\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} ><input type=\"text\"\n        onChange={this.handleInputChange}\n        value={this.props.currentTodo}\n      />\n      </form>\n    )\n  }\n}\n// const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\nexport default connect(\n  (state) => ({ currentTodo: state.currentTodo }),\n  { updateCurrent, saveTodo }\n)(TodoForm)"]},"metadata":{},"sourceType":"module"}