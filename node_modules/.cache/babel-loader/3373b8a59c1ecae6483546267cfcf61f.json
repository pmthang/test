{"ast":null,"code":"var _jsxFileName = \"/home/thang/todo-redux/src/components/TodoForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateCurrent, createTodo } from \"../reducers/todo\";\nimport store from \"../store\";\n\nclass TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInputChange = evt => {\n      const val = evt.target.value;\n      this.props.updateCurrent(val);\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      this.props.saveTodo(this.props.currentTodo);\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.handleInputChange,\n      value: this.props.currentTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n} // const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\n\n\nexport default connect(state => ({\n  currentTodo: state.currentTodo\n}), {\n  updateCurrent,\n  createTodo\n})(TodoForm);","map":{"version":3,"sources":["/home/thang/todo-redux/src/components/TodoForm.js"],"names":["React","Component","connect","updateCurrent","createTodo","store","TodoForm","handleInputChange","evt","val","target","value","props","handleSubmit","preventDefault","saveTodo","currentTodo","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BM,iBAD+B,GACXC,GAAG,IAAI;AACzB,YAAMC,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAvB;AACA,WAAKC,KAAL,CAAWT,aAAX,CAAyBM,GAAzB;AACD,KAJ8B;;AAAA,SAK/BI,YAL+B,GAKhBL,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACM,cAAJ;AACA,WAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWI,WAA/B;AACD,KAR8B;AAAA;;AAS/BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAmC,MAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAE,KAAKN,iBAHjB;AAIE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWI,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AApB8B,C,CAsBjC;AACA;;;AACA,eAAed,OAAO,CACpBgB,KAAK,KAAK;AAAEF,EAAAA,WAAW,EAAEE,KAAK,CAACF;AAArB,CAAL,CADe,EAEpB;AAAEb,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAFoB,CAAP,CAGbE,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateCurrent, createTodo } from \"../reducers/todo\";\nimport store from \"../store\";\n\nclass TodoForm extends Component {\n  handleInputChange = evt => {\n    const val = evt.target.value;\n    this.props.updateCurrent(val);\n  };\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.saveTodo(this.props.currentTodo);\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-inline\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={this.props.currentTodo}\n        />\n      </form>\n    );\n  }\n}\n// const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\nexport default connect(\n  state => ({ currentTodo: state.currentTodo }),\n  { updateCurrent, createTodo },\n)(TodoForm);\n"]},"metadata":{},"sourceType":"module"}