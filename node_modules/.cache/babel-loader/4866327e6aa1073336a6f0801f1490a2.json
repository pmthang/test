{"ast":null,"code":"var _jsxFileName = \"/home/thang/todo-redux/src/components/TodoForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateCurrent } from \"../reducers/todo\";\n\nconst TodoForm = ({\n  currentTodo,\n  updateCurrent\n}) => {\n  const handleInputChange = evt => {\n    const val = evt.target.value;\n    updateCurrent(val);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    onChange: handleInputChange,\n    value: currentTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}; // const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\n\n\nexport default connect(state => ({\n  currentTodo: state.currentTodo\n}), {\n  updateCurrent\n})(TodoForm);","map":{"version":3,"sources":["/home/thang/todo-redux/src/components/TodoForm.js"],"names":["React","connect","updateCurrent","TodoForm","currentTodo","handleInputChange","evt","val","target","value","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeF,EAAAA;AAAf,CAAD,KAAoC;AACnD,QAAMG,iBAAiB,GAAGC,GAAG,IAAI;AAC/B,UAAMC,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAvB;AACAP,IAAAA,aAAa,CAACK,GAAD,CAAb;AACD,GAHD;;AAIA,SACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEF,iBAHZ;AAIE,IAAA,KAAK,EAAED,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAfD,C,CAiBA;AACA;;;AACA,eAAeH,OAAO,CACpBS,KAAK,KAAK;AAAEN,EAAAA,WAAW,EAAEM,KAAK,CAACN;AAArB,CAAL,CADe,EAEpB;AAAEF,EAAAA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateCurrent } from \"../reducers/todo\";\nconst TodoForm = ({ currentTodo, updateCurrent }) => {\n  const handleInputChange = evt => {\n    const val = evt.target.value;\n    updateCurrent(val);\n  };\n  return (\n    <form className=\"form-inline\">\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        onChange={handleInputChange}\n        value={currentTodo}\n      />\n    </form>\n  );\n};\n\n// const mapStateToProps = (state) => ({currentTodo: state.currentTodo})\n// const mapDispatchToProps= ({updateCurrent})\nexport default connect(\n  state => ({ currentTodo: state.currentTodo }),\n  { updateCurrent },\n)(TodoForm);\n"]},"metadata":{},"sourceType":"module"}