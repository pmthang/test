{"ast":null,"code":"var _jsxFileName = \"/home/thang/todo-redux/src/components/TodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos, deleteTodo, toggleTodo } from '../reducers/todo';\n\nconst TodoItem = ({\n  id,\n  complete,\n  name,\n  deleteTodo\n}) => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: () => deleteTodo(id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"X\"), React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: complete,\n  onChange: () => toggleTodo(id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), name);\n\nclass TodoList extends Component {\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Todo-List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.todos.map(todo => React.createElement(TodoItem, Object.assign({\n      key: todo.id,\n      toggleTodo: this.props.toggleTodo,\n      deleteTodo: this.props.deleteTodo\n    }, todo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(state => ({\n  todos: state.todos\n}), {\n  fetchTodos,\n  deleteTodo,\n  toggleTodo\n})(TodoList);","map":{"version":3,"sources":["/home/thang/todo-redux/src/components/TodoList.js"],"names":["React","Component","connect","fetchTodos","deleteTodo","toggleTodo","TodoItem","id","complete","name","TodoList","componentDidMount","props","render","todos","map","todo","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,QAAmD,kBAAnD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,IAAhB;AAAsBL,EAAAA;AAAtB,CAAD,KACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,OAAO,EAAE,MAAMA,UAAU,CAACG,EAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE;AAAO,EAAA,IAAI,EAAC,UAAZ;AACE,EAAA,OAAO,EAAEC,QADX;AAEE,EAAA,QAAQ,EAAE,MAAMH,UAAU,CAACE,EAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAMGE,IANH,CADF;;AAUA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC/BU,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,UAAX;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAC5B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACT,EAApB;AACE,MAAA,UAAU,EAAE,KAAKK,KAAL,CAAWP,UADzB;AAEE,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAWR;AAFzB,OAGMY,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,CAAL,CADF,CADF;AAWD;;AAhB8B;;AAmBjC,eAAed,OAAO,CACnBe,KAAD,KAAY;AAAEH,EAAAA,KAAK,EAAEG,KAAK,CAACH;AAAf,CAAZ,CADoB,EAEpB;AAAEX,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAFoB,CAAP,CAGbK,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchTodos, deleteTodo, toggleTodo } from '../reducers/todo'\n\nconst TodoItem = ({ id, complete, name, deleteTodo }) => (\n  <li>\n    <button onClick={() => deleteTodo(id)}>X</button>\n    <input type=\"checkbox\"\n      checked={complete}\n      onChange={() => toggleTodo(id)}\n    />\n    {name}\n  </li>\n)\nclass TodoList extends Component {\n  componentDidMount() {\n    this.props.fetchTodos()\n  }\n  render() {\n    return (\n      <div className=\"Todo-List\">\n        <ul>{this.props.todos.map(todo =>\n          <TodoItem key={todo.id}\n            toggleTodo={this.props.toggleTodo}\n            deleteTodo={this.props.deleteTodo}\n            {...todo}\n          />)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({ todos: state.todos }),\n  { fetchTodos, deleteTodo, toggleTodo }\n)(TodoList)\n"]},"metadata":{},"sourceType":"module"}