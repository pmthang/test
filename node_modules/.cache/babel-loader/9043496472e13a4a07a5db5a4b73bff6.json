{"ast":null,"code":"import _objectSpread from \"/home/thang/todo-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { getTodos, createTodo, destroyTodo, updateTodo } from \"../lib/todoServices\";\nconst initState = {\n  todos: [],\n  currentTodo: \"\"\n};\nexport function loadTodos(todos) {\n  return {\n    type: \"TODO_LOAD\",\n    payload: todos\n  };\n}\nexport function addTodo(name) {\n  return {\n    type: \"TODO_ADD\",\n    payload: name\n  };\n}\nexport function removeTodo(id) {\n  return {\n    type: \"DELETE_TODO\",\n    payload: id\n  };\n}\nexport function updateCurrent(val) {\n  return {\n    type: \"UPDATE_CURRENT\",\n    payload: val\n  };\n}\nexport function replaceTodo(todo) {\n  return {\n    type: \"REPLACE_TODO\",\n    payload: todo\n  };\n}\nexport function fetchTodos() {\n  return dispatch => {\n    getTodos().then(todos => dispatch(loadTodos(todos)));\n  };\n}\nexport function saveTodo(name) {\n  return dispatch => {\n    createTodo(name).then(res => dispatch(addTodo(res)));\n  };\n}\nexport function toggleTodo(id) {\n  return (dispatch, getState) => {\n    const todos = getState().todos.todos;\n    const todo = todos.find(todo => todo.id === id);\n\n    const toggled = _objectSpread({}, todo, {\n      complete: !todo.complete\n    });\n\n    updateTodo(toggled).then(res => dispatch(replaceTodo(res)));\n  };\n  console.log(toggleTodo);\n}\nexport function deleteTodo(id) {\n  return dispatch => {\n    destroyTodo(id).then(() => dispatch(removeTodo(id)));\n  };\n}\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case \"TODO_ADD\":\n      return _objectSpread({}, state, {\n        currentTodo: \"\",\n        todos: state.todos.concat(action.payload)\n      });\n\n    case \"TODO_LOAD\":\n      return _objectSpread({}, state, {\n        todos: action.payload\n      });\n\n    case \"UPDATE_CURRENT\":\n      return _objectSpread({}, state, {\n        currentTodo: action.payload\n      });\n\n    case \"REPLACE_TODO\":\n      return _objectSpread({}, state, {\n        todos: state.todos.map(todo => todo.id === action.payload.id ? action.payload : todo)\n      });\n\n    case \"DELETE_TODO\":\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/thang/todo-redux/src/reducers/todo.js"],"names":["getTodos","createTodo","destroyTodo","updateTodo","initState","todos","currentTodo","loadTodos","type","payload","addTodo","name","removeTodo","id","updateCurrent","val","replaceTodo","todo","fetchTodos","dispatch","then","saveTodo","res","toggleTodo","getState","find","toggled","complete","console","log","deleteTodo","state","action","concat","map","filter"],"mappings":"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","sourcesContent":["import {\n  getTodos,\n  createTodo,\n  destroyTodo,\n  updateTodo,\n} from \"../lib/todoServices\";\n\nconst initState = {\n  todos: [],\n  currentTodo: \"\",\n};\nexport function loadTodos(todos) {\n  return {\n    type: \"TODO_LOAD\",\n    payload: todos,\n  };\n}\nexport function addTodo(name) {\n  return {\n    type: \"TODO_ADD\",\n    payload: name,\n  };\n}\nexport function removeTodo(id) {\n  return {\n    type: \"DELETE_TODO\",\n    payload: id,\n  };\n}\nexport function updateCurrent(val) {\n  return {\n    type: \"UPDATE_CURRENT\",\n    payload: val,\n  };\n}\nexport function replaceTodo(todo) {\n  return {\n    type: \"REPLACE_TODO\",\n    payload: todo,\n  };\n}\nexport function fetchTodos() {\n  return dispatch => {\n    getTodos().then(todos => dispatch(loadTodos(todos)));\n  };\n}\nexport function saveTodo(name) {\n  return dispatch => {\n    createTodo(name).then(res => dispatch(addTodo(res)));\n  };\n}\nexport function toggleTodo(id) {\n  return (dispatch, getState) => {\n    const { todos } = getState().todos;\n    const todo = todos.find(todo => todo.id === id);\n    const toggled = { ...todo, complete: !todo.complete };\n    updateTodo(toggled).then(res => dispatch(replaceTodo(res)));\n  };\n  console.log(toggleTodo);\n}\n\nexport function deleteTodo(id) {\n  return dispatch => {\n    destroyTodo(id).then(() => dispatch(removeTodo(id)));\n  };\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"TODO_ADD\":\n      return {\n        ...state,\n        currentTodo: \"\",\n        todos: state.todos.concat(action.payload),\n      };\n    case \"TODO_LOAD\":\n      return { ...state, todos: action.payload };\n    case \"UPDATE_CURRENT\":\n      return { ...state, currentTodo: action.payload };\n    case \"REPLACE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.id === action.payload.id ? action.payload : todo,\n        ),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}